*Задание 1. *Представьте, что вы работаете над разработкой простого приложения для записной книжки, 
которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) 
для этого приложения. Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.


Юнит-тесты:
проверка класса Contact
test_update_contact_success(self, id_)
тестируем метод, который находит контакт по id_, позволяет его отредактировать и возвращает новый вариант.

test_update_contact_failde(self, id_)
тестируем метод, который находит контакт по id_, позволяет его отредактировать и в случае введения неверных данных сообщает 
'редактирование не удалось'

test_delete_contact_success(self, id_)
тестируем метод, который находит контакт по id_, удаляет его (либо меняет поле 'activ' на False), и возвращает сообщение
'контакт удален'  в случае успеха

test_delete_contact_failed(self, id_)
тестируем метод, который находит контакт по id_, и в случае, если такого id_ нет, возвращает сообщение 'такого контакта нет'


Интеграционные тесты
проверка класса Contact и ContactList
test_get_from_contact_list(self)
создаем новый контакт create_contact
создаем лист контактов
добавляем в список контактов с помощью метода add_contact
получаем добавленный контакт из списка контактов с помощью метода get_contact, используем mock


Сквозное тестирование
тестирование от начала и до конца: от создания контакта пользователем до проверки всех методов и работы базы данных
